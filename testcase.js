// prettier-ignore
export const testCase1 = {
  width: 13,
  height: 5,
  columnHints: [[1], [1], [5], [], [1, 1], [], [1, 1, 1], [1, 1, 1], [5], [],
[3, 1], [1, 1, 1], [1,3]],
  rowHints: [[3, 3, 3], [1, 1, 1, 1], [1, 3, 3], [1, 1, 1, 1], [1, 3, 3]],
};
// prettier-ignore
export const answer1 = [
  1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,
   0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0,
   0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,
   0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1,
   0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1
  ]

export const testCase2 = {
  width: 8,
  height: 6,
  columnHints: [[4], [2], [2, 2], [6], [3, 2], [1, 2], [2], [1, 2]],
  rowHints: [[3, 1], [1, 4], [1, 2, 1], [1, 1, 2], [7], [5]],
};
// prettier-ignore
export const answer2 = [
  0, 0, 1, 1, 1, 0, 0, 1,
  1, 0, 1, 1, 1, 1, 0, 0,
  1, 0, 0, 1, 1, 0, 0, 1,
  1, 0, 0, 1, 0, 0, 1, 1,
  1, 1, 1, 1, 1, 1, 1, 0,
  0, 1, 1, 1, 1, 1, 0, 0
 ]

export const testCase4 = {
  width: 50,
  height: 80,
  columnHints: [
    [11,10,57],[10,23,2,27],[9,14,3,22],[8,13,4,1,8,20],[7,7,6,6,1,3,18],[7,5,1,4,8,3,2,16],[10,1,1,4,3,4,4,2,14],[9,1,4,3,1,3,4,2,12], [8,4,3,5,3,13], [8,2,9,2,2,4,11], [8,1,6,1,1,5,11,9],[7,4,10,14,8], [7,1,2,1,7,4,3,6,7], [7,2,3,6,3,4,5,5], [1,1,12,2,4,4,5], [1,1,9,2,2,2,4], [4,2,2,2,1,2,2,3], [1,3,1,5,2,3], [4,3,1,1,3,1,1,1,2,2,3], [4,5,1,3,5,3,1],[3,1,7,1,2,4,2,1],[5,4,1,3,3,2],[3,1,1,1,3,1,3,5,2],[2,2,3,1,3,6,2],[3,2,3,4,12,3],[2,3,6,6,3,3],[3,2,1,2,4,7,4], [3,2,4,5,5,5],[3,3,4,4,1,3,5],[3,3,9,1,1,6], [1,2,10,7], [1,2,2,6,8], [3,2,10,8], [2,2,8,9], [3,1,2,7,10], [5,9,11],[5,1,4,12],[4,1,2,13],[6,14], [6,4,1,15], [5,3,16], [6,1,2,1,1,1,16],[1,7,2,12,18],[1,8,14,19],[1,8,3,2,20],[2,6,2,1,3,3,4,21],[2,9,1,1,1,4,9,23],[3,9,42],[5,8,42],[3,1,6,1,11,27]
  ],
  rowHints: [
    [16,14,4,8],[14,12,9,5],[14,7,1,4,1,6,3], [14,4,1,9,1],[14,2,3,13,2],[17,1,10], [14,11],[4,5,8], [3,3,8], [2,3,7], [1,3,1,2,4],[6,6],[6,5],[5,1,3],[6,2,2],[5,2],[4],[5,1,1],[10,5],[11,10],[9,1,7],[9],[4],[3],[3],[2,3,2,6,1],[2,5,3,8,2],[2,6,2,4,3,2],[2,3,4,3,13,2,1],[2,2,9,5,7],[2,2,5,3,1,9],[2,3,8,12],[2,6,2,1,12],[10,3,14],[4,3,4,2,1,1,3,1],[1,2,2,3,2,3,2,2],[2,2,1,3,2,2,1,2],[2,3,3,1,2],[1,3,2,3],[1,2,4,1,3],[1,1,4,1,4],[1,2,4,7],[1,2,1,2,2,5],[1,4,1,2,5],[1,5,3,1,2,4],[1,9,3,1,1,7],[1,1,6,2,5],[1,2,5],[1,1,2,4], [1,1,2,2],[1,1,2,2],[1,1,2,2,2], [2,1,3,2,3],[2,1,6,2,1,2,1,2,3],[2,1,20,1,2,3],[2,2,22,1,3], [2,1,6,3,7,1,4],[3,1,2,1,5,1,4],[3,1,2,1,1,1,4,1,5],[4,1,2,1,4,6],[4,1,2,1,2,1,7],[5,1,2,1,1,4,8],[5,2,1,4,8],[6,1,2,1,4,10],[6,1,2,2,3,11],[7,2,1,1,1,12],[7,1,2,1,2,2,13],[9,3,1,1,14],[10,2,2,15],[10,3,2,16],[11,2,1,17],[12,7,19],[13,5,20],[14,21],[15,23],[16,24],[19,26],[50],[13,5,29]
  ],
}

export const testCase5 = {
  width: 30,
  height: 40,
  columnHints: [
    [2],[8],[12],[16],[19],
    [22],[26],[28],[32],[3,23,8],
    [18,7,7],[17,3,6],[16,5],[7,6,1,2],[6,1,6,1,1],
    [5,2,6,2],[6,1,6,1,1],[7,6,1,4],[16,6],[18,3,7],
    [26,8],[3,23,8],[31],[27],[24],
    [21],[18],[14],[10],[3]
  ],
  rowHints: [
    [3,5,3], [13], [13], [11] ,[11],
    [5,5], [5,4], [4,4], [5,5], [5,3,5],
    [5,1,5], [7,5], [17], [18], [19],
    [19], [20], [6,4,7], [5,6], [6,7],
    [8,8], [9,2,2,8], [9,9], [8,3,8], [9,1,8],
    [9,9], [10,8], [9,8], [9,8], [9,9],
    [9,8],[8,8],[9,9], [12,11], [11,12],
    [12,11], [11,10], [9,9], [6,6], [3,3]
  ],
};

//
// solve(
//   testCase1.width,
//   testCase1.height,
//   testCase1.columnHints,
//   testCase1.rowHints
// );
//
// solve(
//   testCase2.width,
//   testCase2.height,
//   testCase2.columnHints,
//   testCase2.rowHints
// )

// console.time('3');
// solve(
//   testCase3.width,
//   testCase3.height,
//   testCase3.columnHints,
//   testCase3.rowHints
// )
// console.timeEnd('3');

// solve(
//   testCase4.width,
//   testCase4.height,
//   testCase4.columnHints,
//   testCase4.rowHints
// )
// console.time('1');
// solve(
//   testCase5.width,
//   testCase5.height,
//   testCase5.columnHints,
//   testCase5.rowHints
// )
// console.timeEnd('1');

// console.log(new_permutation_with_constraint(5, [1,1], [SET_UNKNOWN, SET_TRUE, SET_UNKNOWN, SET_UNKNOWN, SET_UNKNOWN]));

// //console.log(getPossibleRow(7, [1,2,1]));
// console.log('check');
// specify_row(7, [1,2,1], [1,2,2,2,2,2,2]);
// specify_row(10, [1,2,1], [1,2,2,2,2,2,2,1,2,2]);
// console.log(checkLine([1,2,2,2,2,2,2,1,2,2],[1,2,1])); // Un
// console.log(checkLine([1,2,2,2,2,2,1,1,2,1],[1,2,1])); //Un
// console.log(checkLine([1,0,0,0,0,0,1,1,0,1],[1,2,1])); //match
// console.log(checkLine([1,0,0,0,0,1,1,1,0,1],[1,2,1])); //unmatch
// console.log(checkLine([1,0,0,0,1,0,1,1,0,1],[1,2,1])); // not
// console.log(checkLine([1,0,0,1,1,0,1,0,0,1],[1,2,1])); //not
// console.log(checkLine([1,0,0,1,1,0,0,0,0,1],[1,2,1])); // match
// console.log(checkLine([1,0,1,1,0,0,1,1,2,1],[1,2,1])); //Un
// transpose([[1,2,3],[4,5,6],[7,8,9]]);
//console.log(getPossibleRow(10, [1,2,1]));